local pointer = require("pointer_lock.pointer")

go.property("acquire_input_focus", true)
go.property("click_action_id", hash("touch"))
go.property("unlock_action_id", hash("key_esc"))

function init(self)
    if self.acquire_input_focus then
        msg.post(".", "acquire_input_focus")
    end

    pointer.locked = false
    pointer_lock_ext.glfw_mouse_unlock()

    if html5 then
        pointer_lock_ext.html5_on_click(function()
            -- DEBUG
            -- print("html5_on_click")
            if not pointer.locked then
                pointer_lock_ext.html5_request_pointer_lock()
            end
        end)
    end
end

function final(self)
    pointer.locked = false
    pointer_lock_ext.glfw_mouse_unlock()

    if html5 then
        pointer_lock_ext.html5_on_click(nil)
    end
end

function update(self, dt)
    if html5 then
        local locked = pointer_lock_ext.html5_pointer_locked()
        -- DEBUG
        -- if locked ~= pointer.locked then
        --     print("html5_pointer_locked changed (update): ", locked)
        -- end
        pointer.locked = locked
    end
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
    if html5 then
        local locked = pointer_lock_ext.html5_pointer_locked()
        -- DEBUG
        -- if locked ~= pointer.locked then
        --     print("html5_pointer_locked changed (input): ", locked)
        -- end
        pointer.locked = locked

        if pointer.locked and action_id == self.unlock_action_id and action.released then
            pointer_lock_ext.html5_exit_pointer_lock()

            return true
        end
    else
        if action_id == self.unlock_action_id and action.released then
            local skip_events = pointer.locked
            pointer.locked = false
            pointer_lock_ext.glfw_mouse_unlock()

            return skip_events
        elseif action_id == self.click_action_id and action.released then
            if not pointer.locked then
                pointer.locked = true
                pointer_lock_ext.glfw_mouse_lock()

                return true
            end
        end
    end
end
